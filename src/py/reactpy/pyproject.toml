[build-system]
requires = ["hatchling", "hatch-build-scripts>=0.0.4"]
build-backend = "hatchling.build"

# --- Project --------------------------------------------------------------------------

[project]
name = "reactpy"
dynamic = ["version"]
description = 'Reactive user interfaces with pure Python'
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = ["react", "javascript", "reactpy", "component"]
authors = [
  { name = "Ryan Morshead", email = "ryan.morshead@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "typing-extensions >=3.10",
  "mypy-extensions >=0.4.3",
  "anyio >=3",
  "jsonpatch >=1.32",
  "fastjsonschema >=2.14.5",
  "requests >=2",
  "colorlog >=6",
  "asgiref >=3",
  "lxml >=4",
]
[project.optional-dependencies]
all = ["reactpy[starlette,sanic,fastapi,flask,tornado,testing]"]

starlette = [
  "starlette >=0.13.6",
  "uvicorn[standard] >=0.19.0",
]
sanic = [
  "sanic >=21",
  "sanic-cors",
  "uvicorn[standard] >=0.19.0",
]
fastapi = [
  "fastapi >=0.63.0",
  "uvicorn[standard] >=0.19.0",
]
flask = [
  "flask",
  "markupsafe>=1.1.1,<2.1",
  "flask-cors",
  "flask-sock",
]
tornado = [
  "tornado",
]
testing = [
  "playwright",
]

[project.urls]
Source = "https://github.com/reactive-python/reactpy"
Documentation = "https://github.com/reactive-python/reactpy#readme"
Issues = "https://github.com/reactive-python/reactpy/discussions"

# --- Hatch ----------------------------------------------------------------------------

[tool.hatch.version]
path = "reactpy/__init__.py"

[tool.hatch.envs.default]
features = ["all"]
pre-install-command = "hatch build --hooks-only"
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "pytest-asyncio>=0.17",
  "pytest-mock",
  "pytest-rerunfailures",
  "pytest-timeout",
  "responses",
  "playwright",
  # I'm not quite sure why this needs to be installed for tests with Sanic to pass
  "sanic-testing",
  # Used to generate model changes from layout update messages
  "jsonpointer",
]
[tool.hatch.envs.default.scripts]
test = "playwright install && pytest {args:tests}"
test-cov = "playwright install && coverage run -m pytest {args:tests}"
cov-report = [
  # "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov {args}",
  "cov-report",
]

[tool.hatch.envs.default.env-vars]
REACTPY_DEBUG_MODE="1"

[tool.hatch.envs.lint]
features = ["all"]
dependencies = [
  "mypy>=1.0.0",
  "types-click",
  "types-tornado",
  "types-pkg-resources",
  "types-flask",
  "types-requests",
]

[tool.hatch.envs.lint.scripts]
types = "mypy --strict reactpy"
all = ["types"]

[[tool.hatch.build.hooks.build-scripts.scripts]]
work_dir = "../../js"
out_dir = "reactpy/_static"
commands = [
  "npm ci",
  "npm run build"
]
artifacts = [
  "app/dist/"
]

# --- Pytest ---------------------------------------------------------------------------

[tool.pytest.ini_options]
testpaths = "tests"
xfail_strict = true
python_files = "*asserts.py test_*.py"
asyncio_mode = "auto"
log_cli_level = "INFO"

# --- MyPy -----------------------------------------------------------------------------

[tool.mypy]
incremental = false
ignore_missing_imports = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

# --- Coverage -------------------------------------------------------------------------

[tool.coverage.run]
source_pkgs = ["reactpy"]
branch = false
parallel = false
omit = [
  "reactpy/__init__.py",
]

[tool.coverage.report]
fail_under = 100
show_missing = true
skip_covered = true
sort = "Name"
exclude_lines = [
  "no ?cov",
  '\.\.\.',
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
omit = [
    "reactpy/__main__.py",
]
