# --- Project ----------------------------------------------------------------------------

[project]
name = "project"
version = "0.0.0"
description = "Scripts for managing the ReactPy respository"
dependencies = ["invoke", "ruff", "black"]

# --- Hatch ----------------------------------------------------------------------------

[tool.hatch.envs.default]
post-install-commands = ["invoke env"]

[tool.hatch.envs.default.scripts]
publish = "invoke publish {args}"

checks = ["lint", "test"]
lint = ["lint-py {args}", "lint-js {args}"]
test = ["test-py", "test-js"]

lint-py = "invoke lint-py {args}"
lint-js = "invoke lint-js {args}"

test-py = "invoke test-py {args}"
test-js = "invoke test-js {args}"

# --- Black ----------------------------------------------------------------------------

[tool.black]
target-version = ["py39"]
line-length = 88
skip-string-normalization = true

# --- Ruff -----------------------------------------------------------------------------

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  # TODO: turn this on later
  # "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # TODO: turn this on later
  "N802", "N806",  # allow TitleCase functions/variables
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["reactpy"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"**/tests/**/*" = ["PLR2004", "S101", "TID252"]
